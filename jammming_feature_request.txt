Design Document Template
March 13th 2018


OBJECTIVE
Enhance user experience on Jamming ReactJS Demo. First allow user to press Enter to initiate search. Second is to provide preview 30 seconds of the track if preview audio is available. Prevent users from adding same songs already in the playlist. Also remember users’ search term after rerouting page to Spotify authentication page.
BACKGROUND 
Press Enter to search is a must have feature for users. Desktop users expect pressing Enter should trigger a search.
Preview samples is very important before user add the song to their playlist. Users often want to hear the songs before they add to their playlist. In addition, the ability to move songs between the search result list and the playlist is also important, so user won’t keep trying to add the same songs. 
I would also like to help users not to type the search term again after users get rerouted to the Spotify authentication login page.
Lastly, I also wanted to modify the styling, so that it is a bit more mobile friendly.
TECHNICAL DESIGN
Press Enter requires onKeyPress on the Input. I also added to check if the search term is empty, since Spotify does not allow empty search term. I added an IF statement to detect if search term is indeed empty. 
if(this.state.term){
        this.props.onSearch(this.state.term, this.state.pageNumber);
}
In the return of the search result json, there is a audio file link, which I have used the Audio HTML5 tag to implement the Preview audio. In Spotify.js return jsonResponse.tracks.items.map, I have added 1 line: preview_url: track.preview_url, to capture the audio url. Then in Track.js, I added the HTML5 Audio element if preview_url is available, as not all songs has preview audio url available.       
<audio controls>    
        <source src={preview_url} type="audio/mpeg"/>
</audio>);
For making users to enjoy a more seamless experience, I tried to use localStorage to save the users entered search term before users were brought to the Spotify Auth page, so that on return from the Spotify Auth page, user does not not have to initiate search again. Inside Spotfiy.js search function, I have added localStorage setItem and getItem to set and get the searchTerm.
localStorage.setItem('searchTerm', searchTerm);
const accessToken = Spotify.getAccessToken();
if(localStorage.getItem('searchTerm') && localStorage.getItem('pageNumber')){
        searchTerm = localStorage.getItem('searchTerm');
}






















For better UI and mobile experience, I have made the Div padding less on the side. I have reformatted each Track layout, and added a divider. 
Padding changes: CSS:   padding: 0 2% 5% 2%; 
Divider: <Divider />
  
  

Demo
https://mark_law_jammming.surge.sh/


CAVEATS
After using the HTML5 Audio tag, modification to the styling of the Audio component has proven to be less flexible than I originally thought. As shown from the screen shot in the technical design, the HTML5 Audio tag displays time slider, volume slider, download button, play button. However I would only like play button. That requires more customization than I originally anticipated.
The localStorage and logic of storing search term also have been not as straight forward than I expected, and continue to experience issue to handle the login process and perserve the search term successfully. I used localStorage.setItem before calling getToken, then I tried to retrieve the search term via localStorage.getItem, however that did not work as expected. I was unable to resolve this issue.